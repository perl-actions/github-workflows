name: Simple perltester workflow

on:
  workflow_call:
    inputs:
      since-perl:
        description: "Test with all Perls since given version."
        type: string
        required: true
        default: "5.10"
      with-devel:
        description: "Whether to test also with 'devel' Perl"
        type: boolean
        default: false
      unstable:
        description: "Which perl versions are considered unstable. Value is JSON array."
        type: string
        default: "[ 'devel' ]"

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    name: List perl versions
    outputs:
      perl-versions: ${{ steps.action.outputs.perl-versions }}
    steps:
      - name: Perl versions action step
        id: action
        uses: perl-actions/perl-versions@main
        with:
          since-perl: ${{ inputs.since-perl }}
          with-devel: ${{ inputs.with-devel }}

  build:
    name: Build distribution
    runs-on: ubuntu-latest
    container:
      image: perldocker/perl-tester:latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: install build dependencies
        if: ${{ success () }}
        run: cpan-install-build-deps

      - name: build distribution
        if: ${{ success () }}
        run: build-dist

      - name: pack distribution
        if: ${{ success () }}
        run: tar cfz build_dir.tar.gz build_dir

      - uses: actions/upload-artifact@master
        with:
          name: build_dir.tar.gz
          path: build_dir.tar.gz

  test:
    name: Perl ${{ matrix.perl-version }}
    runs-on: ubuntu-latest
    needs:
      - prepare-matrix
      - build
    container:
      image: perldocker/perl-tester:${{ matrix.perl-version }}

    strategy:
      fail-fast: false
      matrix:
        perl-version: ${{ fromJson (needs.prepare-matrix.outputs.perl-versions) }}

    steps:
      - name: download artifact
        uses: actions/download-artifact@master
        with:
          name: build_dir.tar.gz

      - name: unpack distribution
        run: tar -xf build_dir.tar.gz --strip-components=1

      - name: install test dependencies
        if: ${{ success () }}
        run: cpan-install-dist-deps

      - name: test
        id: test
        if: ${{ success () }}
        continue-on-error: ${{ contains (fromJson (inputs.unstable), matrix.perl-version) }}
        run: prove -lr --jobs $(nproc --all) --state save t

      - name: publish .prove
        if: ${{ failure () && steps.test.conclusion == 'failure' }}
        uses: actions/upload-artifact@master
        with:
          name: .prove-${{ matrix.perl-version }}
          path: .prove

  cleanup:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ always () }}

    steps:
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: build_dir.tar.gz
